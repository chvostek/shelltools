#!/usr/bin/env bash

usage() {
  echo ""
  echo "Usage: ${0##*/} [options] dataset"
  echo ""
  echo "Options include:"
  echo "  -t  include timestamp of changed files"
  echo ""
  echo "Once running, you can nagivate using:"
  echo "   j  next pair"
  echo "   k  previous pair"
  echo "   l  display a list of snapshots"
  echo "   g  go to a specific point in the list"
  echo "   z  zoom"
  echo "   r  refresh snapshot list"
  echo "   q  quit"
  echo ""
}

# Defaults
if [ -t 0 ]; then
  Verbose=true; vflag="-v"
else
  Verbose=false; vflag=""
fi
showtime=false

# Options
while getopts vqt opt; do
  case "$opt" in
    v)	Verbose=true; vflag="-v" ;;
    q)	Verbose=false; vflag="" ;;
    t)	showtime=true ;;
    *)	usage; exit 1 ;;
  esac
done
shift $((OPTIND - 1))

# Sanity
if [ -z "$1" ]; then
  usage
  exit 1
elif ! zfs list -Ho name "$1" >/dev/null; then
  exit 1
elif ! zfs list -t snapshot -rHo name | grep -q "^$1@"; then
  echo "cannot diff '$1': dataset has no snapshots" >&2
  exit 1
fi

snaps=($(zfs list -t snapshot -rHo name -d 1 "$1"))

if [ ${#snaps[@]} -eq 1 ]; then
  if $showtime; then
    zfs diff -t "${snaps[$lhs]}" | sed 's/^\([0-9]*\).[0-9]*/\1/' | while read d t line; do printf "%s\t%s\t%s\n" "$(date -r $d '+[%Y-%m-%d %T]')" "$t" "$line"; done
  else
    zfs diff "${snaps[0]}"
  fi
  exit $?
fi

echo "Browsing ${#snaps[@]} snapshots..."
for ((i=0;i<${#snaps[@]};i++)); do
  printf "(%d) %s\n" "$i" "${snaps[$i]}"
done

lhs=0
while :; do
  echo ">> ($lhs) zfs diff \"${snaps[$lhs]}\" \"${snaps[$((lhs+1))]}\""
  if $showtime; then
    zfs diff -t "${snaps[$lhs]}" "${snaps[$((lhs+1))]}" | sed 's/^\([0-9]*\).[0-9]*/\1/' | while read d t line; do printf "%s\t%s\t%s\n" "$(date -r $d '+[%Y-%m-%d %T]')" "$t" "$line"; done
  else
    zfs diff "${snaps[$lhs]}" "${snaps[$((lhs+1))]}"
  fi
  choice=""
  while :; do
    read -s -n 1 -p "(j/k/g/l/z/q)? " choice
    echo "$choice"
    case "$choice" in
      q) break 2 ;;
      j) ((lhs++)) ;;
      k) ((lhs--)) ;;
      z)
         zfs diff "${snaps[$lhs]}" "${snaps[$((lhs+1))]}" | nl
         ;;
      g) read -p "Jump to (0-$((${#snaps[@]} - 1))): " go
         if [[ "$go" =~ ^[0-9]+$ ]] && [ $go -lt ${#snaps[@]} ]; then
           lhs=$go
         fi
         ;;
      l) for ((i=0;i<${#snaps[@]};i++)); do
           printf "(%d) %s\n" "$i" "${snaps[$i]}"
         done
         ;&
      r) snaps=($(zfs list -t snapshot -rHo name -d 1 "$1")) ;;
      \?) usage ;;
      *) continue ;;
    esac
    break
  done
  case "$lhs" in
    -1) lhs=0 ;;
    ${#snaps[@]}) break ;;
  esac
done

